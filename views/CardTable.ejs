<!DOCTYPE html>
<html lang="en">
 
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Data Display</title>
  <link rel="stylesheet" href="css/style1.css">
  <!-- <link rel="stylesheet" href="css/home.css"> -->
  <!-- <link rel="stylesheet" href="css/CardTable.css"> -->
  <!-- <link rel="stylesheet" href="css/UserRegisterTable.css"> -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
  <!-- Add Bootstrap CSS link -->
  <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" rel="stylesheet">
</head>
 
<body>
  <%- include('layouts/header');-%>
  <%- include('layouts/naviMenu');-%>
  <!-- collapsible submenus -->
  <div class="container-fluid">
      <div class="row">
        <%- include('layouts/sidebar');-%>
        <div class="col-md-9">
          <div class="container-fluid mb-3 mt-3">
            <div class="card">
              <div class="card-body">
                <h4><%= __('Time Card Details') %></h4>
              </div>
            </div>
          </div>
          <div class="container-fluid ">
            <div class="card">
              <div class="card-body">
                <div class="search-container mb-2">
                  <div class="input-group">
                    <input type="text" id="searchInput" class="search-input" onkeyup="searchTable()"
                      placeholder="<%= __('Search') %>">
                    <div class="input-group-append">
                      <div class="input-group-text search-icon" onclick="toggleSearch()">
                        <i class="fas fa-search"></i>
                      </div>
                      &nbsp; &nbsp;
                      <button class="btn btn-secondary" onclick="clearSearch()"><%= __('Clear') %></button>
                    </div>
                  </div>
                </div>
                <div class="table-container">
                  <table class="table table-bordered" id="CardTable">
                    <thead>
                      <tr>
                        <th><%= __('Employee ID') %></th>
                        <th><%= __('Time Card Period') %> </th>
                        <!-- <th>Status_id</th> -->
                        <th><%= __('Status') %></th>
                        <th><%= __('Total Hours') %></th>                        
                        <th><%= __('Submission Date') %></th>
                      </tr>
                    </thead>
                    <tbody>
                      <% data.forEach(row=> { %>
                        <tr>
                          <td>
                            <%= row.EMPLOYEE_ID %>
                          </td>
 
                          <td>
                            <%= row.TIME_CARD_PERIOD %>
                          </td>
                          <!-- <td>
                            <%= row.STATUS_ID %>
                          </td> -->
                          <td>
                            <% if (row.Lookup_Values ==='approved' ) { %>
                              <span style="color: green;"><i class="fas fa-check-circle"></i> Approved</span>
                              <% } else if (row.Lookup_Values ==='rejected' ) { %>
                                <span style="color: red;"><i class="fas fa-times-circle"></i> Rejected</span>
                                <% } else if (row.Lookup_Values ==='pending' ) { %>
                                  <span style="color: orange;"><i class="fas fa-clock"></i> Pending</span>
                                  <% } else if (row.Lookup_Values ==='submitted' ) { %>
                                    <span style="color: blue;"><i class="fas fa-paper-plane"></i> Submitted</span>
                                    <% } else { %>
                                      <%= row.STATUS %>
                                        <% } %>
                          </td>
                          <td>
                            <%= row.TOTAL_HOURS %>
                          </td>
                          <!-- <td>
                            <%= row.RECORDED_HOURS%>
                          </td>
                          <td>
                            <%= row.ABSENCE_HOURS%>
                          </td> -->
                          <td>
                            <%= row.CREATION_DATE%>
                          </td>
                        </tr>
                        <% }); %>
 
                    </tbody>
                  </table>
                </div>
                <div id="pagination" class="mt-3 offset-md-5"></div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
 
 
 
  <!-- Bootstrap JS and Popper.js CDN links -->
  <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
  <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>
 
  <!-- Add this line before your script tags -->
  <script>
    function deleteRecord(TIME_CARD_ID) {
      if (confirm('Are you sure you want to delete this record?')) {
        // Perform AJAX request to the server to delete the record
        fetch(`/deleteRecord/${TIME_CARD_ID}`, {
          method: 'GET',
        })
          .then(response => response.json())
          .then(data => {
            if (data.success) {
              // Reload the page or update the table after successful deletion
              location.reload();
            } else {
              console.error('Error deleting record:', data.error);
              // Handle error as needed
            }
          })
          .catch(error => {
            console.error('Error deleting record:', error);
            // Handle error as needed
          });
      }
    }
  </script>
  <!-- ... (existing code) -->
  <script>
    // JavaScript functions for handling search and clear
    function searchTable() {
      const input = document.getElementById('searchInput').value.trim().toUpperCase();
      const table = document.querySelector('.table'); // Select the table
      const rows = table.getElementsByTagName('tr');
 
      for (let i = 0; i < rows.length; i++) {
        const cells = rows[i].getElementsByTagName('td');
        let found = false;
 
        for (let j = 0; j < cells.length; j++) {
          const cellText = cells[j].innerText.trim().toUpperCase();
          if (cellText.includes(input)) {
            found = true;
            break;
          }
        }
 
        if (found) {
          rows[i].style.display = ''; // Show the row if data is found
        } else {
          rows[i].style.display = 'none'; // Hide the row if data is not found
        }
      }
    }
    function clearSearch() {
      const searchInput = document.getElementById('searchInput');
      searchInput.value = '';
      searchTable(); // Clearing input, so display all rows again
      const table = document.querySelector('.table');
      const headerRow = table.querySelector('thead tr');
      headerRow.style.display = '';
    }
  </script>
  <%- include('layouts/script');-%>
  <!--Pagination-->
  <script>
    document.addEventListener('DOMContentLoaded', function () {
      const tableBody = document.getElementById('CardTable').getElementsByTagName('tbody')[0];
      const itemsPerPage = 4; // Number of items to display per page
      const dataRows = Array.from(tableBody.getElementsByTagName('tr'));
      let currentPage = 1;

      // Function to display rows for the current page
      function showPage(page) {
        const startIndex = (page - 1) * itemsPerPage;
        const endIndex = startIndex + itemsPerPage;

        dataRows.forEach((row, index) => {
          if (index >= startIndex && index < endIndex) {
            row.style.display = '';
          } else {
            row.style.display = 'none';
          }
        });
      }

      // Function to generate pagination controls
      function generatePaginationControls() {
        const totalPages = Math.ceil(dataRows.length / itemsPerPage);

        const paginationContainer = document.getElementById('pagination');
        paginationContainer.innerHTML = '';

        // Previous button
        const prevButton = document.createElement('button');
        prevButton.innerText = "Previous";
        prevButton.addEventListener('click', function () {
          if (currentPage > 1) {
            currentPage--;
            showPage(currentPage);
          }
        });
        paginationContainer.appendChild(prevButton);

        // Page buttons
        for (let i = 1; i <= totalPages; i++) {
          const button = document.createElement('button');
          button.innerText = i;
          button.addEventListener('click', function () {
            currentPage = i;
            showPage(currentPage);
          });
          paginationContainer.appendChild(button);
        }

        // Next button
        const nextButton = document.createElement('button');
        nextButton.innerText = "Next";
        nextButton.addEventListener('click', function () {
          if (currentPage < totalPages) {
            currentPage++;
            showPage(currentPage);
          }
        });
        paginationContainer.appendChild(nextButton);
      }

      // Initial setup
      showPage(currentPage);
      generatePaginationControls();
    });
  </script>
</body>
 
</html>